{"name":"MobileReplenishmentPositiveTest","status":"broken","statusDetails":{"known":false,"muted":false,"flaky":false,"message":"@BeforeAll method 'org.openqa.selenium.WebDriver tests.base.BaseTest.initDriver()' must not return a value.","trace":"org.junit.platform.commons.JUnitException: @BeforeAll method 'org.openqa.selenium.WebDriver tests.base.BaseTest.initDriver()' must not return a value.\r\n\tat org.junit.jupiter.engine.descriptor.LifecycleMethodUtils.assertVoid(LifecycleMethodUtils.java:72)\r\n\tat org.junit.jupiter.engine.descriptor.LifecycleMethodUtils.lambda$findMethodsAndCheckVoidReturnType$2(LifecycleMethodUtils.java:96)\r\n\tat java.util.ArrayList.forEach(ArrayList.java:1257)\r\n\tat java.util.Collections$UnmodifiableCollection.forEach(Collections.java:1080)\r\n\tat org.junit.jupiter.engine.descriptor.LifecycleMethodUtils.findMethodsAndCheckVoidReturnType(LifecycleMethodUtils.java:96)\r\n\tat org.junit.jupiter.engine.descriptor.LifecycleMethodUtils.findMethodsAndAssertStatic(LifecycleMethodUtils.java:79)\r\n\tat org.junit.jupiter.engine.descriptor.LifecycleMethodUtils.findBeforeAllMethods(LifecycleMethodUtils.java:40)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.prepare(ClassBasedTestDescriptor.java:162)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.prepare(ClassBasedTestDescriptor.java:78)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$1(NodeTestTask.java:107)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:107)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:75)\r\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:171)\r\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.invokeAll(ForkJoinPoolHierarchicalTestExecutorService.java:115)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)\r\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:171)\r\n\tat java.util.concurrent.RecursiveAction.exec(RecursiveAction.java:189)\r\n\tat java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)\r\n\tat java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)\r\n\tat java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)\r\n\tat java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)\r\n"},"stage":"finished","description":"","steps":[],"attachments":[],"parameters":[],"start":1596530995326,"stop":1596530995327,"uuid":"ffcd06e2-e6d3-4d1a-ab7c-9b1b88507a0c","historyId":"635ba6bfcab4b528be2a3da581bd78e2","fullName":"tests.telecommunications.positive.MobileReplenishmentPositiveTest","labels":[{"name":"host","value":"kosarau"},{"name":"thread","value":"11260@kosarau.ForkJoinPool-1-worker-1(12)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"tests.telecommunications.positive.MobileReplenishmentPositiveTest"},{"name":"testClass","value":"tests.telecommunications.positive.MobileReplenishmentPositiveTest"},{"name":"suite","value":"tests.telecommunications.positive.MobileReplenishmentPositiveTest"}],"links":[]}